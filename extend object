function extendObject(element) {
  const extended = new WeakMap();
  extended.set(element, {});
  
  return {
    obj: element,
    set(key, value) {
      if(this.obj) extended.get(this.obj)[key] = value;
    },
    get(key) {
      return this.obj ? extended.get(this.obj)[key] : null;
    },
    reflect(key, value = null) {
      if(!this.obj) return;
      
      if(value === null) {
        return this.obj[key];
      } else {
        this.obj[key] = value;
      }
    }
  }
}
